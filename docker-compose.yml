version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:16-alpine
    container_name: adaptivemedia-postgres
    restart: unless-stopped
    environment:
      POSTGRES_DB: adaptivemedia
      POSTGRES_USER: adaptivemedia
      POSTGRES_PASSWORD: adaptivemedia
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./docker/postgres/init:/docker-entrypoint-initdb.d
    networks:
      - adaptivemedia-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U adaptivemedia -d adaptivemedia"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Elasticsearch
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.11.0
    container_name: adaptivemedia-elasticsearch
    restart: unless-stopped
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    ports:
      - "9200:9200"
      - "9300:9300"
    volumes:
      - elasticsearch_data:/usr/share/elasticsearch/data
    networks:
      - adaptivemedia-network
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:9200/_cluster/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 5

  # Spring Boot Application
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: adaptivemedia-app
    restart: unless-stopped
    ports:
      - "8080:8080"
    environment:
      # Database configuration
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/adaptivemedia
      SPRING_DATASOURCE_USERNAME: adaptivemedia
      SPRING_DATASOURCE_PASSWORD: adaptivemedia

      # Elasticsearch configuration
      SPRING_ELASTICSEARCH_URIS: http://elasticsearch:9200

      # JPA/Hibernate configuration
      SPRING_JPA_HIBERNATE_DDL_AUTO: validate
      SPRING_JPA_SHOW_SQL: false

      # Flyway configuration
      SPRING_FLYWAY_ENABLED: true
      SPRING_FLYWAY_BASELINE_ON_MIGRATE: true

      # Application configuration
      SPRING_PROFILES_ACTIVE: docker

      # JVM options
      JAVA_OPTS: "-Xms256m -Xmx512m"
    depends_on:
      postgres:
        condition: service_healthy
      elasticsearch:
        condition: service_healthy
    networks:
      - adaptivemedia-network
    volumes:
      - ./logs:/app/logs

# Networks
networks:
  adaptivemedia-network:
    driver: bridge

# Volumes
volumes:
  postgres_data:
    driver: local
  elasticsearch_data:
    driver: local