version: '3.8'

services:
  postgres:
    networks:
      - adaptivemedia-network
    image: postgres:16-alpine
    container_name: adaptivemedia-postgres
    restart: unless-stopped
    environment:
      POSTGRES_DB: adaptivemedia
      POSTGRES_USER: adaptivemedia
      POSTGRES_PASSWORD: adaptivemedia
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./docker/postgres/init:/docker-entrypoint-initdb.d
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U adaptivemedia -d adaptivemedia"]
      interval: 10s
      timeout: 5s
      retries: 5

  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: adaptivemedia-app
    restart: unless-stopped
    ports:
      - "8080:8080"
    extra_hosts:
      - "host.docker.internal:host-gateway"
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/adaptivemedia
      SPRING_DATASOURCE_USERNAME: adaptivemedia
      SPRING_DATASOURCE_PASSWORD: adaptivemedia
      SPRING_PROFILES_ACTIVE: docker
      EXTERNAL_API_URL: http://host.docker.internal:8081

      SPRING_JPA_HIBERNATE_DDL_AUTO: validate
      SPRING_JPA_SHOW_SQL: false

      SPRING_FLYWAY_ENABLED: true
      SPRING_FLYWAY_BASELINE_ON_MIGRATE: true

      JAVA_OPTS: "-Xms256m -Xmx512m"
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - adaptivemedia-network
    volumes:
      - ./logs:/app/logs

networks:
  adaptivemedia-network:
    driver: bridge

volumes:
  postgres_data:
    driver: local