/*
 * This file is generated by jOOQ.
 */
package com.adaptivemedia.assignment.jooq.tables.records;


import com.adaptivemedia.assignment.jooq.tables.FetchLog;

import java.time.LocalDateTime;

import org.jooq.Record1;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
public class FetchLogRecord extends UpdatableRecordImpl<FetchLogRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>public.fetch_log.id</code>.
     */
    public void setId(Long value) {
        set(0, value);
    }

    /**
     * Getter for <code>public.fetch_log.id</code>.
     */
    public Long getId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>public.fetch_log.fetch_timestamp</code>.
     */
    public void setFetchTimestamp(LocalDateTime value) {
        set(1, value);
    }

    /**
     * Getter for <code>public.fetch_log.fetch_timestamp</code>.
     */
    public LocalDateTime getFetchTimestamp() {
        return (LocalDateTime) get(1);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached FetchLogRecord
     */
    public FetchLogRecord() {
        super(FetchLog.FETCH_LOG);
    }

    /**
     * Create a detached, initialised FetchLogRecord
     */
    public FetchLogRecord(Long id, LocalDateTime fetchTimestamp) {
        super(FetchLog.FETCH_LOG);

        setId(id);
        setFetchTimestamp(fetchTimestamp);
        resetChangedOnNotNull();
    }

    /**
     * Create a detached, initialised FetchLogRecord
     */
    public FetchLogRecord(com.adaptivemedia.assignment.jooq.tables.pojos.FetchLog value) {
        super(FetchLog.FETCH_LOG);

        if (value != null) {
            setId(value.getId());
            setFetchTimestamp(value.getFetchTimestamp());
            resetChangedOnNotNull();
        }
    }
}
