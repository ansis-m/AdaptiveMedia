/*
 * This file is generated by jOOQ.
 */
package com.adaptivemedia.assignment.jooq.tables.records;


import com.adaptivemedia.assignment.jooq.tables.SalesData;

import java.math.BigDecimal;
import java.time.LocalDateTime;

import org.jooq.Record1;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * Sales tracking data received from external APIs
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
public class SalesDataRecord extends UpdatableRecordImpl<SalesDataRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>public.sales_data.id</code>.
     */
    public void setId(Long value) {
        set(0, value);
    }

    /**
     * Getter for <code>public.sales_data.id</code>.
     */
    public Long getId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>public.sales_data.tracking_id</code>. Unique identifier
     * for tracking visitor to sale conversion
     */
    public void setTrackingId(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>public.sales_data.tracking_id</code>. Unique identifier
     * for tracking visitor to sale conversion
     */
    public String getTrackingId() {
        return (String) get(1);
    }

    /**
     * Setter for <code>public.sales_data.visit_date</code>. When the visitor
     * first arrived
     */
    public void setVisitDate(LocalDateTime value) {
        set(2, value);
    }

    /**
     * Getter for <code>public.sales_data.visit_date</code>. When the visitor
     * first arrived
     */
    public LocalDateTime getVisitDate() {
        return (LocalDateTime) get(2);
    }

    /**
     * Setter for <code>public.sales_data.sale_date</code>. When the sale was
     * completed (null if no sale yet)
     */
    public void setSaleDate(LocalDateTime value) {
        set(3, value);
    }

    /**
     * Getter for <code>public.sales_data.sale_date</code>. When the sale was
     * completed (null if no sale yet)
     */
    public LocalDateTime getSaleDate() {
        return (LocalDateTime) get(3);
    }

    /**
     * Setter for <code>public.sales_data.sale_price</code>. Final sale price in
     * USD
     */
    public void setSalePrice(BigDecimal value) {
        set(4, value);
    }

    /**
     * Getter for <code>public.sales_data.sale_price</code>. Final sale price in
     * USD
     */
    public BigDecimal getSalePrice() {
        return (BigDecimal) get(4);
    }

    /**
     * Setter for <code>public.sales_data.product</code>. Product name or
     * identifier
     */
    public void setProduct(String value) {
        set(5, value);
    }

    /**
     * Getter for <code>public.sales_data.product</code>. Product name or
     * identifier
     */
    public String getProduct() {
        return (String) get(5);
    }

    /**
     * Setter for <code>public.sales_data.commission_amount</code>. Commission
     * earned from this sale
     */
    public void setCommissionAmount(BigDecimal value) {
        set(6, value);
    }

    /**
     * Getter for <code>public.sales_data.commission_amount</code>. Commission
     * earned from this sale
     */
    public BigDecimal getCommissionAmount() {
        return (BigDecimal) get(6);
    }

    /**
     * Setter for <code>public.sales_data.created_at</code>.
     */
    public void setCreatedAt(LocalDateTime value) {
        set(7, value);
    }

    /**
     * Getter for <code>public.sales_data.created_at</code>.
     */
    public LocalDateTime getCreatedAt() {
        return (LocalDateTime) get(7);
    }

    /**
     * Setter for <code>public.sales_data.updated_at</code>.
     */
    public void setUpdatedAt(LocalDateTime value) {
        set(8, value);
    }

    /**
     * Getter for <code>public.sales_data.updated_at</code>.
     */
    public LocalDateTime getUpdatedAt() {
        return (LocalDateTime) get(8);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached SalesDataRecord
     */
    public SalesDataRecord() {
        super(SalesData.SALES_DATA);
    }

    /**
     * Create a detached, initialised SalesDataRecord
     */
    public SalesDataRecord(Long id, String trackingId, LocalDateTime visitDate, LocalDateTime saleDate, BigDecimal salePrice, String product, BigDecimal commissionAmount, LocalDateTime createdAt, LocalDateTime updatedAt) {
        super(SalesData.SALES_DATA);

        setId(id);
        setTrackingId(trackingId);
        setVisitDate(visitDate);
        setSaleDate(saleDate);
        setSalePrice(salePrice);
        setProduct(product);
        setCommissionAmount(commissionAmount);
        setCreatedAt(createdAt);
        setUpdatedAt(updatedAt);
        resetChangedOnNotNull();
    }

    /**
     * Create a detached, initialised SalesDataRecord
     */
    public SalesDataRecord(com.adaptivemedia.assignment.jooq.tables.pojos.SalesData value) {
        super(SalesData.SALES_DATA);

        if (value != null) {
            setId(value.getId());
            setTrackingId(value.getTrackingId());
            setVisitDate(value.getVisitDate());
            setSaleDate(value.getSaleDate());
            setSalePrice(value.getSalePrice());
            setProduct(value.getProduct());
            setCommissionAmount(value.getCommissionAmount());
            setCreatedAt(value.getCreatedAt());
            setUpdatedAt(value.getUpdatedAt());
            resetChangedOnNotNull();
        }
    }
}
