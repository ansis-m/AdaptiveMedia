/*
 * This file is generated by jOOQ.
 */
package com.adaptivemedia.assignment.jooq.tables.daos;


import com.adaptivemedia.assignment.jooq.tables.SalesData;
import com.adaptivemedia.assignment.jooq.tables.records.SalesDataRecord;

import java.math.BigDecimal;
import java.time.LocalDateTime;
import java.util.List;
import java.util.Optional;

import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Repository;


/**
 * Sales tracking data received from external APIs
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
@Repository
public class SalesDataDao extends DAOImpl<SalesDataRecord, com.adaptivemedia.assignment.jooq.tables.pojos.SalesData, Long> {

    /**
     * Create a new SalesDataDao without any configuration
     */
    public SalesDataDao() {
        super(SalesData.SALES_DATA, com.adaptivemedia.assignment.jooq.tables.pojos.SalesData.class);
    }

    /**
     * Create a new SalesDataDao with an attached configuration
     */
    @Autowired
    public SalesDataDao(Configuration configuration) {
        super(SalesData.SALES_DATA, com.adaptivemedia.assignment.jooq.tables.pojos.SalesData.class, configuration);
    }

    @Override
    public Long getId(com.adaptivemedia.assignment.jooq.tables.pojos.SalesData object) {
        return object.getId();
    }

    /**
     * Fetch records that have <code>id BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.adaptivemedia.assignment.jooq.tables.pojos.SalesData> fetchRangeOfId(Long lowerInclusive, Long upperInclusive) {
        return fetchRange(SalesData.SALES_DATA.ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>id IN (values)</code>
     */
    public List<com.adaptivemedia.assignment.jooq.tables.pojos.SalesData> fetchById(Long... values) {
        return fetch(SalesData.SALES_DATA.ID, values);
    }

    /**
     * Fetch a unique record that has <code>id = value</code>
     */
    public com.adaptivemedia.assignment.jooq.tables.pojos.SalesData fetchOneById(Long value) {
        return fetchOne(SalesData.SALES_DATA.ID, value);
    }

    /**
     * Fetch a unique record that has <code>id = value</code>
     */
    public Optional<com.adaptivemedia.assignment.jooq.tables.pojos.SalesData> fetchOptionalById(Long value) {
        return fetchOptional(SalesData.SALES_DATA.ID, value);
    }

    /**
     * Fetch records that have <code>tracking_id BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.adaptivemedia.assignment.jooq.tables.pojos.SalesData> fetchRangeOfTrackingId(String lowerInclusive, String upperInclusive) {
        return fetchRange(SalesData.SALES_DATA.TRACKING_ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>tracking_id IN (values)</code>
     */
    public List<com.adaptivemedia.assignment.jooq.tables.pojos.SalesData> fetchByTrackingId(String... values) {
        return fetch(SalesData.SALES_DATA.TRACKING_ID, values);
    }

    /**
     * Fetch records that have <code>tracking_code BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.adaptivemedia.assignment.jooq.tables.pojos.SalesData> fetchRangeOfTrackingCode(String lowerInclusive, String upperInclusive) {
        return fetchRange(SalesData.SALES_DATA.TRACKING_CODE, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>tracking_code IN (values)</code>
     */
    public List<com.adaptivemedia.assignment.jooq.tables.pojos.SalesData> fetchByTrackingCode(String... values) {
        return fetch(SalesData.SALES_DATA.TRACKING_CODE, values);
    }

    /**
     * Fetch records that have <code>visit_date BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.adaptivemedia.assignment.jooq.tables.pojos.SalesData> fetchRangeOfVisitDate(LocalDateTime lowerInclusive, LocalDateTime upperInclusive) {
        return fetchRange(SalesData.SALES_DATA.VISIT_DATE, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>visit_date IN (values)</code>
     */
    public List<com.adaptivemedia.assignment.jooq.tables.pojos.SalesData> fetchByVisitDate(LocalDateTime... values) {
        return fetch(SalesData.SALES_DATA.VISIT_DATE, values);
    }

    /**
     * Fetch records that have <code>sale_date BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.adaptivemedia.assignment.jooq.tables.pojos.SalesData> fetchRangeOfSaleDate(LocalDateTime lowerInclusive, LocalDateTime upperInclusive) {
        return fetchRange(SalesData.SALES_DATA.SALE_DATE, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>sale_date IN (values)</code>
     */
    public List<com.adaptivemedia.assignment.jooq.tables.pojos.SalesData> fetchBySaleDate(LocalDateTime... values) {
        return fetch(SalesData.SALES_DATA.SALE_DATE, values);
    }

    /**
     * Fetch records that have <code>sale_price BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.adaptivemedia.assignment.jooq.tables.pojos.SalesData> fetchRangeOfSalePrice(BigDecimal lowerInclusive, BigDecimal upperInclusive) {
        return fetchRange(SalesData.SALES_DATA.SALE_PRICE, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>sale_price IN (values)</code>
     */
    public List<com.adaptivemedia.assignment.jooq.tables.pojos.SalesData> fetchBySalePrice(BigDecimal... values) {
        return fetch(SalesData.SALES_DATA.SALE_PRICE, values);
    }

    /**
     * Fetch records that have <code>product BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<com.adaptivemedia.assignment.jooq.tables.pojos.SalesData> fetchRangeOfProduct(String lowerInclusive, String upperInclusive) {
        return fetchRange(SalesData.SALES_DATA.PRODUCT, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>product IN (values)</code>
     */
    public List<com.adaptivemedia.assignment.jooq.tables.pojos.SalesData> fetchByProduct(String... values) {
        return fetch(SalesData.SALES_DATA.PRODUCT, values);
    }

    /**
     * Fetch records that have <code>commission_amount BETWEEN lowerInclusive
     * AND upperInclusive</code>
     */
    public List<com.adaptivemedia.assignment.jooq.tables.pojos.SalesData> fetchRangeOfCommissionAmount(BigDecimal lowerInclusive, BigDecimal upperInclusive) {
        return fetchRange(SalesData.SALES_DATA.COMMISSION_AMOUNT, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>commission_amount IN (values)</code>
     */
    public List<com.adaptivemedia.assignment.jooq.tables.pojos.SalesData> fetchByCommissionAmount(BigDecimal... values) {
        return fetch(SalesData.SALES_DATA.COMMISSION_AMOUNT, values);
    }
}
