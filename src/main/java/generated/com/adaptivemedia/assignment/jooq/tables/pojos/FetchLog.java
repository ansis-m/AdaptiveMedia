/*
 * This file is generated by jOOQ.
 */
package com.adaptivemedia.assignment.jooq.tables.pojos;


import java.io.Serializable;
import java.time.LocalDateTime;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
public class FetchLog implements Serializable {

    private static final long serialVersionUID = 1L;

    private Long id;
    private LocalDateTime fetchTimestamp;

    public FetchLog() {}

    public FetchLog(FetchLog value) {
        this.id = value.id;
        this.fetchTimestamp = value.fetchTimestamp;
    }

    public FetchLog(
        Long id,
        LocalDateTime fetchTimestamp
    ) {
        this.id = id;
        this.fetchTimestamp = fetchTimestamp;
    }

    /**
     * Getter for <code>public.fetch_log.id</code>.
     */
    public Long getId() {
        return this.id;
    }

    /**
     * Setter for <code>public.fetch_log.id</code>.
     */
    public void setId(Long id) {
        this.id = id;
    }

    /**
     * Getter for <code>public.fetch_log.fetch_timestamp</code>.
     */
    public LocalDateTime getFetchTimestamp() {
        return this.fetchTimestamp;
    }

    /**
     * Setter for <code>public.fetch_log.fetch_timestamp</code>.
     */
    public void setFetchTimestamp(LocalDateTime fetchTimestamp) {
        this.fetchTimestamp = fetchTimestamp;
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj)
            return true;
        if (obj == null)
            return false;
        if (getClass() != obj.getClass())
            return false;
        final FetchLog other = (FetchLog) obj;
        if (this.id == null) {
            if (other.id != null)
                return false;
        }
        else if (!this.id.equals(other.id))
            return false;
        if (this.fetchTimestamp == null) {
            if (other.fetchTimestamp != null)
                return false;
        }
        else if (!this.fetchTimestamp.equals(other.fetchTimestamp))
            return false;
        return true;
    }

    @Override
    public int hashCode() {
        final int prime = 31;
        int result = 1;
        result = prime * result + ((this.id == null) ? 0 : this.id.hashCode());
        result = prime * result + ((this.fetchTimestamp == null) ? 0 : this.fetchTimestamp.hashCode());
        return result;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("FetchLog (");

        sb.append(id);
        sb.append(", ").append(fetchTimestamp);

        sb.append(")");
        return sb.toString();
    }
}
